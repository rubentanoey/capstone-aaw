{
  "openapi": "3.0.3",
  "info": {
    "title": "Marketplace API v2",
    "description": "API for authentication, tenant management, products, orders, cart, and wishlist services",
    "version": "2.0.0",
    "contact": {
      "email": "support@marketplace.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Authentication API"
    },
    {
      "url": "http://localhost:8001",
      "description": "Orders and Cart API"
    },
    {
      "url": "http://localhost:8002",
      "description": "Products API"
    },
    {
      "url": "http://localhost:8003",
      "description": "Tenant API"
    },
    {
      "url": "http://localhost:8004",
      "description": "Wishlist API"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "tenant",
      "description": "Tenant management operations"
    },
    {
      "name": "products",
      "description": "Product management operations"
    },
    {
      "name": "categories",
      "description": "Product category operations"
    },
    {
      "name": "orders",
      "description": "Order management operations"
    },
    {
      "name": "cart",
      "description": "Shopping cart operations"
    },
    {
      "name": "wishlist",
      "description": "Wishlist operations"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "full_name",
          "address",
          "phone_number"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Must be at least 8 characters with at least one lowercase letter, one uppercase letter, and one number",
            "example": "Passw0rd123"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Anytown, USA"
          },
          "phone_number": {
            "type": "string",
            "example": "5551234567"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Passw0rd123"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "full_name": {
            "type": "string",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Anytown, USA"
          },
          "phone_number": {
            "type": "string",
            "example": "5551234567"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "UserVerificationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "CreateTenantRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "My Company"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "EditTenantRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "new_tenant_id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "Updated Company Name"
          }
        }
      },
      "TenantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "owner_id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "name": {
                "type": "string",
                "example": "My Company"
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "price", "quantity_available"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Premium Widget"
          },
          "description": {
            "type": "string",
            "example": "A high-quality widget for all your needs"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 29.99
          },
          "quantity_available": {
            "type": "integer",
            "example": 100
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Widget"
          },
          "description": {
            "type": "string",
            "example": "An improved widget with new features"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 39.99
          },
          "quantity_available": {
            "type": "integer",
            "example": 75
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "tenant_id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "name": {
                "type": "string",
                "example": "Premium Widget"
              },
              "description": {
                "type": "string",
                "example": "A high-quality widget for all your needs"
              },
              "price": {
                "type": "number",
                "format": "float",
                "example": 29.99
              },
              "quantity_available": {
                "type": "integer",
                "example": 100
              },
              "category_id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 201
          }
        }
      },
      "CreateCategoryRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics"
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "tenant_id": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "name": {
                "type": "string",
                "example": "Electronics"
              }
            }
          },
          "status": {
            "type": "integer",
            "example": 201
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error description",
                "example": "Resource not found"
              }
            }
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 404
          }
        }
      }
    }
  },
  "paths": {
    "/api/v2/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "description": "Creates a new user account with the provided details",
        "operationId": "registerUserV2",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 0
      }
    },
    "/api/v2/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token",
        "operationId": "loginUserV2",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 0
      }
    },
    "/api/v2/auth/verify-admin": {
      "post": {
        "tags": ["auth"],
        "summary": "Verify admin token",
        "description": "Validates an admin JWT token and returns the associated user information",
        "operationId": "verifyAdminTokenV2",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 0
      }
    },
    "/api/v2/tenant/{tenant_id}": {
      "get": {
        "tags": ["tenant"],
        "summary": "Get tenant details",
        "description": "Retrieves details of a specific tenant by ID",
        "operationId": "getTenantV2",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "description": "ID of tenant to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Tenant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 3
      },
      "put": {
        "tags": ["tenant"],
        "summary": "Edit tenant details",
        "description": "Updates an existing tenant's information",
        "operationId": "editTenantV2",
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "description": "ID of tenant to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTenantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tenant updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Tenant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 3
      }
    },
    "/api/v2/tenant": {
      "post": {
        "tags": ["tenant"],
        "summary": "Create a new tenant",
        "description": "Creates a new tenant with the authenticated user as owner",
        "operationId": "createTenantV2",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tenant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 3
      }
    },
    "/api/v2/products": {
      "post": {
        "tags": ["products"],
        "summary": "Create a new product",
        "description": "Creates a new product with the provided details",
        "operationId": "createProductV2",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Product name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 2
      }
    },
    "/api/v2/products/{id}": {
      "put": {
        "tags": ["products"],
        "summary": "Update product",
        "description": "Updates an existing product's information",
        "operationId": "updateProductV2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 2
      }
    },
    "/api/v2/categories": {
      "post": {
        "tags": ["categories"],
        "summary": "Create a new category",
        "description": "Creates a new product category",
        "operationId": "createCategoryV2",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Category name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 2
      }
    },
    "/api/v2/categories/{category_id}": {
      "delete": {
        "tags": ["categories"],
        "summary": "Delete category",
        "description": "Deletes an existing category",
        "operationId": "deleteCategoryV2",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of category to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Category is referenced by products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "x-server-index": 2
      }
    }
  }
}
